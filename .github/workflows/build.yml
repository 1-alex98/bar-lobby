name: Test and build

on: [push, pull_request]

jobs:
  checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Ensure fresh npm version
        run: npm install -g npm@latest

      - name: Build Env Information
        run: |
          node -v
          npm -v

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run type-check

      - name: Lint check
        run: npm run lint-check

      - name: Format check
        run: npm run format-check

  build:
    # build only on push to master or on pushed tag
    #if: ${{ github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v') }}
    needs: checks
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest]
        node-version: [14]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Ensure fresh npm version (Windows pre-requirement)
        # https://github.com/actions/setup-node/issues/411
        run: npm i -g npm@8
        if: ${{ matrix.os == 'windows-latest' }}

      - name: Ensure fresh npm version
        run: npm install -g npm@latest

      - name: Build Env Information
        run: |
          node -v
          npm -v

      - name: Install dependencies
        run: npm ci

      - name: Electron Build & Publish
        run: |
          npm run release
        env:
          NODE_OPTIONS: "--max-old-space-size=8192"
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
